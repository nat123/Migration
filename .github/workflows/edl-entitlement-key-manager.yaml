name: edl-entitlement-key-manager
on:
 schedule:
    - cron:  '01 00 * * *'
  # Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:
env:
    BRANCH_NAME: 'master'
    CIS_DEVL_AWS_ACCT: ${{secrets.CIS_DEVL_AWS_ACCT}}
    CIS_PROD_AWS_ACCT: ${{secrets.CIS_PROD_AWS_ACCT}}
    CIS_AWS_REGION: ${{secrets.IS_AWS_REGION}}
    project_name: "edl-entitlement-key-manager"
    region: CIS_AWS_REGION
   
jobs:
   DeploymentSetup:
     name: DeploymentSetup
     runs-on: ubuntu-latest
     steps: 
     - uses: actions/checkout@v2
     - name: Read environment.yml
       id: package
       uses: juliangruber/read-file-action@v1
       with:
        path: ./environment.yml
     - name: Echo package.json
       run: echo "${{ steps.package.outputs.content }}"
   Veracodesca:
    name: Veracodesca
    runs-on: ubuntu-latest
    strategy:
      matrix:
          envNamesAndAccounts: [devl, prod] 
    steps: 
        - uses: actions/checkout@v2
        - name: Set env var
          id: vars
          run: |
            echo ::set-output name=env::\
            $(echo '{ "devl": "${{env.CIS_DEVL_AWS_ACCT}}", "prod": "${{env.CIS_DEVL_AWS_ACCT}}" }' | jq -r 'to_entries[] | select(.key=="${{ matrix.envNamesAndAccounts }}") | .value')
        - name: Test env var
          run: echo "Testing ${{ steps.vars.outputs.env}}"
        - name: Set env willDeployToLowerEnvironments
          run: echo "willDeployToLowerEnvironments=false"
        - name: Set env NEED
          run: |
           if [ $willDeployToLowerEnvironments == 'true' ]; 
           then
           echo "url = ./git config remote.origin.url "
           echo $url
           echo "willDeployToProd = ${{env.BRANCH_NAME}} = "master" && $url=git@github.deere.com:EDL/${{env.project_name}}.git ||
               $url=https://github.deere.com/EDL/${{env.project_name}}.git"
           echo $willDeployToProd
           fi
         
          
     
       
      
         
      
      
       
    
   

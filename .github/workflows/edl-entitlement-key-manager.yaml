name: edl-entitlement-key-manager
on:
 schedule:
    - cron:  '01 00 * * *'
  # Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:
env:
    BRANCH_NAME: 'master'
    CIS_DEVL_AWS_ACCT: ${{secrets.CIS_DEVL_AWS_ACCT}}
    CIS_PROD_AWS_ACCT: ${{secrets.CIS_PROD_AWS_ACCT}}
    CIS_AWS_REGION: ${{secrets.IS_AWS_REGION}}
    project_name: "edl-entitlement-key-manager"
    region: CIS_AWS_REGION
   
jobs:
   DeploymentSetup:
     name: DeploymentSetup
     runs-on: ubuntu-latest
     steps: 
     - uses: actions/checkout@v2
     - name: Read environment.yml
       id: package
       uses: juliangruber/read-file-action@v1
       with:
        path: ./environment.yml
     - name: Echo package.json
       run: echo "${{ steps.package.outputs.content }}"
   Veracodesca:
    name: Veracodesca
    runs-on: ubuntu-latest
    strategy:
      matrix:
          envNamesAndAccounts: [devl, prod] 
    steps: 
        - uses: actions/checkout@v2
        - name: Set env var
          id: vars
          run: |
            echo ::set-output name=env::\
            $(echo '{ "devl": "${{env.CIS_DEVL_AWS_ACCT}}", "prod": "${{env.CIS_DEVL_AWS_ACCT}}" }' | jq -r 'to_entries[] | select(.key=="${{ matrix.envNamesAndAccounts }}") | .value')
        - name: Test env var
          run: echo "Testing ${{ steps.vars.outputs.env}}"
        - name: Set env willDeployToLowerEnvironments
          run: echo "willDeployToLowerEnvironments=false"
        - name: Set env NEED
          run: |
           if [[ $willDeployToLowerEnvironments == "true" ]]; 
           then
           echo "url = ./git config remote.origin.url "
           echo $url
           echo "willDeployToProd = ${{env.BRANCH_NAME}} = "master" && $url=git@github.deere.com:EDL/${{env.project_name}}.git ||
               $url=https://github.deere.com/EDL/${{env.project_name}}.git"
           echo $willDeployToProd
           fi
          if: |
            {{ failure }} && ( github.head_ref == 'master')
             if: ${{ failure() && steps.diff.conclusion == 'failure' }}
            - name: Send mailer
              uses: devellany/send-mail@v1.0.2
               with:
               # Enter SMTP host.
                host: 
               # Enter SMTP port. (defaults to 465)
              port: # optional, default is 465
              # Enter SMTP host account.
              account: 
             # Enter SMTP host account password.
              password: 
            # Enter sender name.
             sender: 
            # Enter sender mail.
            from: 
            # Enter recipient emails and separated with 'comma'. (The prefix 'file://' if you want to read a file)
            to: ENTERPRISEDATALAKECORETEAM@JohnDeere.com
          # Enter the subject of the mail. (The prefix 'file://' if you want to read a file)
          subject: "FAILURE on MASTER BRANCH: ${currentBuild.fullDisplayName}"
          # Enter the body of the mail. (The prefix 'file://' if you want to read a file)
          body: env.BUILD_URL
   if: {{ $willDeployToLowerEnvironment == "true"}}
         
    
      mail to:"ENTERPRISEDATALAKECORETEAM@JohnDeere.com", subject:"FAILURE on MASTER BRANCH: ${currentBuild.fullDisplayName}", body:env.BUILD_URL
    } else if (willDeployToLowerEnvironments) {
      mail to: "ENTERPRISEDATALAKECORETEAM@JohnDeere.com", subject: "FAILURE: ${currentBuild.fullDisplayName}", body: env.BUILD_URL
    }
    error(err)
  }
         
          
     
       
      
         
      
      
       
    
   

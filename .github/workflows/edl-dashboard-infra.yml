name: edl-dashboard-infra
on: 
 workflow_dispatch:
   inputs:
      environment:
         type: 'choice'
         description: environment name
         options:
          - 'devl'
          - 'prod'
env: 
    project_name: edl-dashboard-infra
    snowChangeCreated: false
    CIS_DEVL_AWS_ACCT: ${{secrets.CIS_DEVL_AWS_ACCT}}
    CIS_PROD_AWS_ACCT: ${{secrets.CIS_PROD_AWS_ACCT}}
    assignmentGroup: "AE EDL Support"
    configItem: "aws-ae-databricks-prod.${projectName}" 
    baseUrl: "https://github.deere.com/EDL/${projectName}"
    template_file: infrastructure/cloudformation_templates/edl-dashboard-infra-prod.json
    region: us-east-1
    stack_name: edl-dashboard-infra
    s3_bucket: jd-us01-commoninformationservices-prod-system
    s3_prefix: templates/jd-us01-commoninformationservices-prod-system
jobs:
   edl-dashboard-infra:
    name: edl-dashboard-infra
    runs-on: prod-linux-edl
    strategy:
       matrix:
        node-version: ['8.10.0']
        envNamesAndAccounts: [ {env: devl, account: CIS_DEVL_AWS_ACCT}, {env: prod,account: CIS_PROD_AWS_ACCT }]
    steps:
        - name: checkout
          uses: actions/checkout@v2
        - name: assumerole
          if: ${{ github.event.inputs.environment }} == 'devl'
          run:
            echo "I am natasha"
        - name: pushToImage
          # if: ${{ github.event.inputs.environment }} == 'devl' && ${{ github.event.inputs.environment }} == 'prod' }}
          run: | 
             echo "push to image"
        - name: Setup Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v2
          with: 
            node-version: ${{ matrix.node-version }}
            env:  ${{ matrix.envNamesAndAccounts.env }} source.env
            region: "us-east-1"
 
        - name: nodeInstall  
          run: |
            echo "EDL/ActionTemplates/.github/actions/CommonSteps/nodeInstall@master"
        - name: Package
          run: |
            echo "EDL/ActionTemplates/.github/actions/CommonSteps/zipAndStash@master"
        - name:  Push Nginx Image to ECR - if updated
          if: ${{ github.event.inputs.environment }} == 'devl'
          run: |
            echo "EDL/ActionTemplates/.github/actions/CommonSteps/unstashAndUnzip@master"
        - name: Policyupdate
          run: |
            echo "policiesToUpdate = ["arn:aws:iam::${currentAccountNumber}:policy/datalake/files/edl-async-file-request-adapter-policy"]"
            echo "slaveIAMRole = "arn:aws:iam::${currentAccountNumber}:role/jenkins/appslave-jenkins-edl""
        - name: pushTomaster
          run:  |
            echo "EDL/ActionTemplates/.github/actions/CommonSteps/pushToImage@master
        - name: vercodesca
          run: |
            echo "EDL/ActionTemplates/.github/actions/Veracodesca@master"
        - name: SonarQube Analysis
          if: github.event.ref == 'refs/heads/main'
          run: |
            echo "${scannerHome}/bin/sonar-scanner"
